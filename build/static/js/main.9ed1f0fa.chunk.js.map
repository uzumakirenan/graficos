{"version":3,"sources":["logo.svg","components/line.js","components/bar.js","components/bubble.js","components/doughnut.js","components/hbar.js","components/pie.js","components/polarArea.js","components/radar.js","components/scatter.js","App.js","reportWebVitals.js","index.js"],"names":["Line","props","valores","max","min","Math","floor","random","useEffect","line","document","getElementById","Chart","type","data","dados","options","events","legend","display","legenda","title","text","titulo","useState","labels","datasets","label","backgroundColor","borderColor","borderWidth","pointBackgroundColor","pointRadius","setDados","className","Card","id","width","height","Button","color","onClick","bar","bubble","x","y","r","doughnut","hbar","pie","polar","radar","scatter","App","Navbar","dark","NavbarBrand","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"0MAAe,I,qECIA,SAASA,EAAKC,GAEzB,IAAMC,EAAU,SAACC,EAAKC,GAGlB,OAFWC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMC,GAAOA,IAyCxDI,qBAAU,WAEN,IAAMC,EAAOC,SAASC,eAAe,QAErC,IAAIC,IAAMH,EAAM,CACZI,KAAM,OACNC,KAAMC,EACNC,QAAS,CAELC,OAAQ,CAAC,SAETC,OAAQ,CACJC,QAASlB,EAAMmB,SAGnBC,MAAO,CACHF,SAAS,EACTG,KAAMrB,EAAMsB,cA7DI,MAoENC,mBACtB,CACIC,OAAQ,CAAC,QAAS,OAAQ,QAAS,QAAS,OAAQ,SAAS,SAC7DC,SAAU,CACN,CACIC,MAAO,aACPb,KAAM,CAACZ,EAAQ,GAAG,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,IAC5G0B,gBAAiB,CACb,oBAGJC,YAAa,CACT,mBAEJC,YAAa,EAEbC,qBAAqB,CACjB,qBACA,qBACA,qBACA,qBACA,sBACA,sBAGJC,YAAa,MA7FG,mBAoEzBjB,EApEyB,KAoElBkB,EApEkB,KAmGhC,OACI,qBAAKC,UAAU,2BAAf,SACI,eAACC,EAAA,EAAD,CAAMD,UAAU,WAAhB,UACI,wBAAQE,GAAG,OAAOC,MAAM,MAAMC,OAAO,QACrC,cAACC,EAAA,EAAD,CAAQC,MAAM,eAAeC,QAAS,WA5F9CR,EACI,CACIR,OAAQ,CAAC,QAAS,OAAQ,QAAS,QAAS,OAAQ,SAAS,SAC7DC,SAAU,CACN,CACIC,MAAO,aACPb,KAAM,CAACZ,EAAQ,GAAG,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,IAC5G0B,gBAAiB,CACb,oBAGJC,YAAa,CACT,mBAEJC,YAAa,EAEbC,qBAAqB,CACjB,qBACA,qBACA,qBACA,qBACA,sBACA,sBAGJC,YAAa,OAmErB,mCCvGD,eAAC/B,GAEZ,IAAMC,EAAU,SAACC,EAAKC,GAGlB,OAFWC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMC,GAAOA,IAwCxDI,qBAAU,WAEN,IAAMkC,EAAMhC,SAASC,eAAe,OAEpC,IAAIC,IAAM8B,EAAK,CACX7B,KAAM,MACNC,KAAMC,EACNC,QAAS,CAELC,OAAQ,CAAC,SAETC,OAAQ,CACJC,QAASlB,EAAMmB,SAGnBC,MAAO,CACHF,SAAS,EACTG,KAAMrB,EAAMsB,cA5DN,MAmEIC,mBACtB,CACIC,OAAQ,CAAC,QAAS,OAAQ,QAAS,QAAS,OAAQ,SAAS,SAC7DC,SAAU,CACN,CACAC,MAAO,aACPb,KAAM,CAACZ,EAAQ,GAAG,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,IAC5G0B,gBAAiB,CACb,0BACA,0BACA,0BACA,0BACA,2BACA,2BAGJC,YAAa,CACT,qBACA,qBACA,qBACA,qBACA,sBACA,sBAEJC,YAAa,MA3FH,mBAmEff,EAnEe,KAmERkB,EAnEQ,KAiGtB,OACI,qBAAKC,UAAU,2BAAf,SACI,eAACC,EAAA,EAAD,CAAMD,UAAU,WAAhB,UACI,wBAAQE,GAAG,MAAMC,MAAM,MAAMC,OAAO,QACpC,cAACC,EAAA,EAAD,CAAQC,MAAM,eAAeC,QAAS,WA1F9CR,EACI,CACIR,OAAQ,CAAC,QAAS,OAAQ,QAAS,QAAS,OAAQ,SAAS,SAC7DC,SAAU,CACN,CACAC,MAAO,aACPb,KAAM,CAACZ,EAAQ,GAAG,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,IAC5G0B,gBAAiB,CACb,0BACA,0BACA,0BACA,0BACA,2BACA,2BAGJC,YAAa,CACT,qBACA,qBACA,qBACA,qBACA,sBACA,sBAEJC,YAAa,OAkEjB,oCCrGD,WAAC7B,GAEZ,IAAMC,EAAU,SAACC,EAAKC,GAGlB,OAFWC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMC,GAAOA,IAgDxDI,qBAAU,WAEN,IAAMmC,EAASjC,SAASC,eAAe,UAEvC,IAAIC,IAAM+B,EAAQ,CACd9B,KAAM,SACNC,KAAMC,EACNC,QAAS,CAELC,OAAQ,CAAC,SAETC,OAAQ,CACJC,QAASlB,EAAMmB,SAGnBC,MAAO,CACHF,SAAS,EACTG,KAAMrB,EAAMsB,cApEN,MA2EIC,mBACtB,CACIC,OAAQ,CAAC,QAAS,OAAQ,QAAS,QAAS,OAAQ,SAAS,SAC7DC,SAAU,CACN,CACAC,MAAO,aACPb,KAAM,CACF,CAAC8B,EAAG,EAAGC,EAAE,EAAGC,EAAE,IACd,CAACF,EAAG,GAAIC,EAAE,GAAIC,EAAE,IAChB,CAACF,EAAG,GAAIC,EAAE,GAAIC,EAAE,IAChB,CAACF,EAAG,EAAGC,EAAE,GAAIC,EAAE,IACf,CAACF,EAAG,GAAIC,EAAE,EAAGC,EAAE,IACf,CAACF,EAAG,EAAGC,EAAE,GAAIC,EAAE,IACf,CAACF,EAAG,GAAIC,EAAE,GAAIC,EAAE,KAEpBlB,gBAAiB,CACb,0BACA,0BACA,0BACA,0BACA,2BACA,2BAGJC,YAAa,CACT,qBACA,qBACA,qBACA,qBACA,sBACA,sBAEJC,YAAa,MA3GH,mBA2Eff,EA3Ee,KA2ERkB,EA3EQ,KAiHtB,OACI,qBAAKC,UAAU,2BAAf,SACI,eAACC,EAAA,EAAD,CAAMD,UAAU,WAAhB,UACI,wBAAQE,GAAG,SAASC,MAAM,MAAMC,OAAO,QACvC,cAACC,EAAA,EAAD,CAAQC,MAAM,eAAeC,QAAS,WA1G9CR,EACI,CACIR,OAAQ,CAAC,QAAS,OAAQ,QAAS,QAAS,OAAQ,SAAS,SAC7DC,SAAU,CACN,CACAC,MAAO,aACPb,KAAM,CACF,CAAC8B,EAAG1C,EAAQ,GAAI,GAAI2C,EAAG3C,EAAQ,GAAI,GAAI4C,EAAG5C,EAAQ,GAAI,KACtD,CAAC0C,EAAG1C,EAAQ,GAAI,GAAI2C,EAAG3C,EAAQ,GAAI,GAAI4C,EAAG5C,EAAQ,GAAI,KACtD,CAAC0C,EAAG1C,EAAQ,GAAI,GAAI2C,EAAG3C,EAAQ,GAAI,GAAI4C,EAAG5C,EAAQ,GAAI,KACtD,CAAC0C,EAAG1C,EAAQ,GAAI,GAAI2C,EAAG3C,EAAQ,GAAI,GAAI4C,EAAG5C,EAAQ,GAAI,KACtD,CAAC0C,EAAG1C,EAAQ,GAAI,GAAI2C,EAAG3C,EAAQ,GAAI,GAAI4C,EAAG5C,EAAQ,GAAI,KACtD,CAAC0C,EAAG1C,EAAQ,GAAI,GAAI2C,EAAG3C,EAAQ,GAAI,GAAI4C,EAAG5C,EAAQ,GAAI,KACtD,CAAC0C,EAAG1C,EAAQ,GAAI,GAAI2C,EAAG3C,EAAQ,GAAI,GAAI4C,EAAG5C,EAAQ,GAAI,MAE1D0B,gBAAiB,CACb,0BACA,0BACA,0BACA,0BACA,2BACA,2BAGJC,YAAa,CACT,qBACA,qBACA,qBACA,qBACA,sBACA,sBAEJC,YAAa,OA0EjB,oCCrHD,WAAC7B,GAEZ,IAAMC,EAAU,SAACC,EAAKC,GAGlB,OAFWC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMC,GAAOA,IAwCxDI,qBAAU,WAEN,IAAMuC,EAAWrC,SAASC,eAAe,YAEzC,IAAIC,IAAMmC,EAAU,CAChBlC,KAAM,WACNC,KAAMC,EACNC,QAAS,CAELC,OAAQ,CAAC,SAETC,OAAQ,CACJC,QAASlB,EAAMmB,SAGnBC,MAAO,CACHF,SAAS,EACTG,KAAMrB,EAAMsB,cA5DN,MAmEIC,mBACtB,CACIC,OAAQ,CAAC,QAAS,OAAQ,QAAS,QAAS,OAAQ,SAAS,SAC7DC,SAAU,CACN,CACAC,MAAO,aACPb,KAAM,CAACZ,EAAQ,GAAG,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,IAC5G0B,gBAAiB,CACb,0BACA,0BACA,0BACA,0BACA,2BACA,2BAGJC,YAAa,CACT,qBACA,qBACA,qBACA,qBACA,sBACA,sBAEJC,YAAa,MA3FH,mBAmEff,EAnEe,KAmERkB,EAnEQ,KAiGtB,OACI,qBAAKC,UAAU,2BAAf,SACI,eAACC,EAAA,EAAD,CAAMD,UAAU,WAAhB,UACI,wBAAQE,GAAG,WAAWC,MAAM,MAAMC,OAAO,QACzC,cAACC,EAAA,EAAD,CAAQC,MAAM,eAAeC,QAAS,WA1F9CR,EACI,CACIR,OAAQ,CAAC,QAAS,OAAQ,QAAS,QAAS,OAAQ,SAAS,SAC7DC,SAAU,CACN,CACAC,MAAO,aACPb,KAAM,CAACZ,EAAQ,GAAG,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,IAC5G0B,gBAAiB,CACb,0BACA,0BACA,0BACA,0BACA,2BACA,2BAGJC,YAAa,CACT,qBACA,qBACA,qBACA,qBACA,sBACA,sBAEJC,YAAa,OAkEjB,oCCrGD,WAAC7B,GAEZ,IAAMC,EAAU,SAACC,EAAKC,GAGlB,OAFWC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMC,GAAOA,IAwCxDI,qBAAU,WAEN,IAAMwC,EAAOtC,SAASC,eAAe,QAErC,IAAIC,IAAMoC,EAAM,CACZnC,KAAM,gBACNC,KAAMC,EACNC,QAAS,CAELC,OAAQ,CAAC,SAETC,OAAQ,CACJC,QAASlB,EAAMmB,SAGnBC,MAAO,CACHF,SAAS,EACTG,KAAMrB,EAAMsB,cA5DN,MAmEIC,mBACtB,CACIC,OAAQ,CAAC,QAAS,OAAQ,QAAS,QAAS,OAAQ,SAAS,SAC7DC,SAAU,CACN,CACAC,MAAO,aACPb,KAAM,CAACZ,EAAQ,GAAG,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,IAC5G0B,gBAAiB,CACb,0BACA,0BACA,0BACA,0BACA,2BACA,2BAGJC,YAAa,CACT,qBACA,qBACA,qBACA,qBACA,sBACA,sBAEJC,YAAa,MA3FH,mBAmEff,EAnEe,KAmERkB,EAnEQ,KAiGtB,OACI,qBAAKC,UAAU,2BAAf,SACI,eAACC,EAAA,EAAD,CAAMD,UAAU,WAAhB,UACI,wBAAQE,GAAG,OAAOC,MAAM,MAAMC,OAAO,QACrC,cAACC,EAAA,EAAD,CAAQC,MAAM,eAAeC,QAAS,WA1F9CR,EACI,CACIR,OAAQ,CAAC,QAAS,OAAQ,QAAS,QAAS,OAAQ,SAAS,SAC7DC,SAAU,CACN,CACAC,MAAO,aACPb,KAAM,CAACZ,EAAQ,GAAG,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,IAC5G0B,gBAAiB,CACb,0BACA,0BACA,0BACA,0BACA,2BACA,2BAGJC,YAAa,CACT,qBACA,qBACA,qBACA,qBACA,sBACA,sBAEJC,YAAa,OAkEjB,oCCrGD,WAAC7B,GAEZ,IAAMC,EAAU,SAACC,EAAKC,GAGlB,OAFWC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMC,GAAOA,IAwCxDI,qBAAU,WAEN,IAAMyC,EAAMvC,SAASC,eAAe,OAEpC,IAAIC,IAAMqC,EAAK,CACXpC,KAAM,MACNC,KAAMC,EACNC,QAAS,CAELC,OAAQ,CAAC,SAETC,OAAQ,CACJC,QAASlB,EAAMmB,SAGnBC,MAAO,CACHF,SAAS,EACTG,KAAMrB,EAAMsB,cA5DN,MAmEIC,mBACtB,CACIC,OAAQ,CAAC,QAAS,OAAQ,QAAS,QAAS,OAAQ,SAAS,SAC7DC,SAAU,CACN,CACAC,MAAO,aACPb,KAAM,CAACZ,EAAQ,GAAG,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,IAC5G0B,gBAAiB,CACb,0BACA,0BACA,0BACA,0BACA,2BACA,2BAGJC,YAAa,CACT,qBACA,qBACA,qBACA,qBACA,sBACA,sBAEJC,YAAa,MA3FH,mBAmEff,EAnEe,KAmERkB,EAnEQ,KAiGtB,OACI,qBAAKC,UAAU,2BAAf,SACI,eAACC,EAAA,EAAD,CAAMD,UAAU,WAAhB,UACI,wBAAQE,GAAG,MAAMC,MAAM,MAAMC,OAAO,QACpC,cAACC,EAAA,EAAD,CAAQC,MAAM,eAAeC,QAAS,WA1F9CR,EACI,CACIR,OAAQ,CAAC,QAAS,OAAQ,QAAS,QAAS,OAAQ,SAAS,SAC7DC,SAAU,CACN,CACAC,MAAO,aACPb,KAAM,CAACZ,EAAQ,GAAG,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,IAC5G0B,gBAAiB,CACb,0BACA,0BACA,0BACA,0BACA,2BACA,2BAGJC,YAAa,CACT,qBACA,qBACA,qBACA,qBACA,sBACA,sBAEJC,YAAa,OAkEjB,oCCrGD,WAAC7B,GAEZ,IAAMC,EAAU,SAACC,EAAKC,GAGlB,OAFWC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMC,GAAOA,IAwCxDI,qBAAU,WAEN,IAAM0C,EAAQxC,SAASC,eAAe,SAEtC,IAAIC,IAAMsC,EAAO,CACbrC,KAAM,YACNC,KAAMC,EACNC,QAAS,CAELC,OAAQ,CAAC,SAETC,OAAQ,CACJC,QAASlB,EAAMmB,SAGnBC,MAAO,CACHF,SAAS,EACTG,KAAMrB,EAAMsB,cA5DN,MAmEIC,mBACtB,CACIC,OAAQ,CAAC,QAAS,OAAQ,QAAS,QAAS,OAAQ,SAAS,SAC7DC,SAAU,CACN,CACAC,MAAO,aACPb,KAAM,CAACZ,EAAQ,GAAG,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,IAC5G0B,gBAAiB,CACb,0BACA,0BACA,0BACA,0BACA,2BACA,2BAGJC,YAAa,CACT,qBACA,qBACA,qBACA,qBACA,sBACA,sBAEJC,YAAa,MA3FH,mBAmEff,EAnEe,KAmERkB,EAnEQ,KAiGtB,OACI,qBAAKC,UAAU,2BAAf,SACI,eAACC,EAAA,EAAD,CAAMD,UAAU,WAAhB,UACI,wBAAQE,GAAG,QAAQC,MAAM,MAAMC,OAAO,QACtC,cAACC,EAAA,EAAD,CAAQC,MAAM,eAAeC,QAAS,WA1F9CR,EACI,CACIR,OAAQ,CAAC,QAAS,OAAQ,QAAS,QAAS,OAAQ,SAAS,SAC7DC,SAAU,CACN,CACAC,MAAO,aACPb,KAAM,CAACZ,EAAQ,GAAG,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,IAC5G0B,gBAAiB,CACb,0BACA,0BACA,0BACA,0BACA,2BACA,2BAGJC,YAAa,CACT,qBACA,qBACA,qBACA,qBACA,sBACA,sBAEJC,YAAa,OAkEjB,oCCrGD,WAAC7B,GAEZ,IAAMC,EAAU,SAACC,EAAKC,GAGlB,OAFWC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMC,GAAOA,IA4CxDI,qBAAU,WAEN,IAAM2C,EAAQzC,SAASC,eAAe,SAEtC,IAAIC,IAAMuC,EAAO,CACbtC,KAAM,QACNC,KAAMC,EACNC,QAAS,CAELC,OAAQ,CAAC,SAETC,OAAQ,CACJC,QAASlB,EAAMmB,SAGnBC,MAAO,CACHF,SAAS,EACTG,KAAMrB,EAAMsB,cAhEN,MAuEIC,mBACtB,CACIC,OAAQ,CAAC,QAAS,OAAQ,QAAS,QAAS,OAAQ,SAAS,SAC7DC,SAAU,CACN,CACAC,MAAO,aACPb,KAAM,CAACZ,EAAQ,GAAG,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,IAC5G0B,gBAAiB,CACb,2BAEJC,YAAa,CACT,qBACA,qBACA,qBACA,qBACA,sBACA,sBAEJC,YAAa,EAEbC,qBAAqB,CACjB,qBACA,qBACA,qBACA,qBACA,sBACA,0BAjGM,mBAuEfhB,EAvEe,KAuERkB,EAvEQ,KAwGtB,OACI,qBAAKC,UAAU,2BAAf,SACI,eAACC,EAAA,EAAD,CAAMD,UAAU,WAAhB,UACI,wBAAQE,GAAG,QAAQC,MAAM,MAAMC,OAAO,QACtC,cAACC,EAAA,EAAD,CAAQC,MAAM,eAAeC,QAAS,WAjG9CR,EACI,CACIR,OAAQ,CAAC,QAAS,OAAQ,QAAS,QAAS,OAAQ,SAAS,SAC7DC,SAAU,CACN,CACAC,MAAO,aACPb,KAAM,CAACZ,EAAQ,GAAG,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,GAAGA,EAAQ,GAAI,IAC5G0B,gBAAiB,CACb,2BAGJC,YAAa,CACT,qBACA,qBACA,qBACA,qBACA,sBACA,sBAEJC,YAAa,EAEbC,qBAAqB,CACjB,qBACA,qBACA,qBACA,qBACA,sBACA,2BAsER,oCC5GD,WAAC9B,GAEZ,IAAMC,EAAU,SAACC,EAAKC,GAGlB,OAFWC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMC,GAAOA,IAkDxDI,qBAAU,WAEN,IAAM4C,EAAU1C,SAASC,eAAe,WAExC,IAAIC,IAAMwC,EAAS,CACfvC,KAAM,UACNC,KAAMC,EACNC,QAAS,CAELC,OAAQ,CAAC,SAETC,OAAQ,CACJC,QAASlB,EAAMmB,SAGnBC,MAAO,CACHF,SAAS,EACTG,KAAMrB,EAAMsB,cAtEN,MA8EIC,mBACtB,CACIC,OAAQ,CAAC,QAAS,OAAQ,QAAS,QAAS,OAAQ,SAAS,SAC7DC,SAAU,CACN,CACAC,MAAO,aACPb,KAAM,CACF,CAAC8B,EAAG1C,EAAQ,GAAI,GAAI2C,EAAG3C,EAAQ,GAAI,IACnC,CAAC0C,EAAG1C,EAAQ,GAAI,GAAI2C,EAAG3C,EAAQ,GAAI,IACnC,CAAC0C,EAAG1C,EAAQ,GAAI,GAAI2C,EAAG3C,EAAQ,GAAI,IACnC,CAAC0C,EAAG1C,EAAQ,GAAI,GAAI2C,EAAG3C,EAAQ,GAAI,IACnC,CAAC0C,EAAG1C,EAAQ,GAAI,GAAI2C,EAAG3C,EAAQ,GAAI,IACnC,CAAC0C,EAAG1C,EAAQ,GAAI,GAAI2C,EAAG3C,EAAQ,GAAI,IACnC,CAAC0C,EAAG1C,EAAQ,GAAI,GAAI2C,EAAG3C,EAAQ,GAAI,KAEvC0B,gBAAiB,CACb,0BACA,0BACA,0BACA,0BACA,2BACA,2BAGJC,YAAa,CACT,qBACA,qBACA,qBACA,qBACA,sBACA,sBAEJC,YAAa,EAEbE,YAAa,OAhHH,mBA8EfjB,EA9Ee,KA8ERkB,EA9EQ,KAsHtB,OACI,qBAAKC,UAAU,2BAAf,SACI,eAACC,EAAA,EAAD,CAAMD,UAAU,WAAhB,UACI,wBAAQE,GAAG,UAAUC,MAAM,MAAMC,OAAO,QACxC,cAACC,EAAA,EAAD,CAAQC,MAAM,eAAeC,QAAS,WA/G9CR,EACI,CACIR,OAAQ,CAAC,QAAS,OAAQ,QAAS,QAAS,OAAQ,SAAS,SAC7DC,SAAU,CACN,CACAC,MAAO,aACPb,KAAM,CACF,CAAC8B,EAAG1C,EAAQ,GAAI,GAAI2C,EAAG3C,EAAQ,GAAI,IACnC,CAAC0C,EAAG1C,EAAQ,GAAI,GAAI2C,EAAG3C,EAAQ,GAAI,IACnC,CAAC0C,EAAG1C,EAAQ,GAAI,GAAI2C,EAAG3C,EAAQ,GAAI,IACnC,CAAC0C,EAAG1C,EAAQ,GAAI,GAAI2C,EAAG3C,EAAQ,GAAI,IACnC,CAAC0C,EAAG1C,EAAQ,GAAI,GAAI2C,EAAG3C,EAAQ,GAAI,IACnC,CAAC0C,EAAG1C,EAAQ,GAAI,GAAI2C,EAAG3C,EAAQ,GAAI,IACnC,CAAC0C,EAAG1C,EAAQ,GAAI,GAAI2C,EAAG3C,EAAQ,GAAI,KAEvC0B,gBAAiB,CACb,0BACA,0BACA,0BACA,0BACA,2BACA,2BAGJC,YAAa,CACT,qBACA,qBACA,qBACA,qBACA,sBACA,sBAEJC,YAAa,EAEbE,YAAa,QA6EjB,oCClFDqB,MA9Bf,SAAapD,GAIX,OAFAS,SAASW,MAAQ,mBAGf,gCACE,cAACiC,EAAA,EAAD,CAAQC,MAAI,EAACf,MAAM,UAAnB,SACE,qBAAKN,UAAU,YAAf,SACE,cAACsB,EAAA,EAAD,CAAaC,KAAK,IAAlB,8DAIJ,sBAAKvB,UAAU,MAAf,UACE,cAAClC,EAAD,CAAMoB,SAAS,EAAOG,OAAO,sBAC7B,cAAC,EAAD,CAAKH,SAAS,EAAOG,OAAO,qBAC5B,cAAC,EAAD,CAAQH,SAAS,EAAOG,OAAO,wBAC/B,cAAC,EAAD,CAAUH,SAAS,EAAMG,OAAO,yBAChC,cAAC,EAAD,CAAMH,SAAS,EAAOG,OAAO,gCAC7B,cAAC,EAAD,CAAKH,SAAS,EAAMG,OAAO,qBAC3B,cAAC,EAAD,CAAOH,SAAS,EAAMG,OAAO,4BAC7B,cAAC,EAAD,CAAOH,SAAS,EAAOG,OAAO,uBAC9B,cAAC,EAAD,CAASH,SAAS,EAAOG,OAAO,gCCvBzBmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3D,SAASC,eAAe,SAM1B+C,M","file":"static/js/main.9ed1f0fa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState } from 'react'\r\nimport { Card, Button } from 'reactstrap'\r\nimport Chart from 'chart.js'\r\n\r\nexport default function Line(props) {\r\n\r\n    const valores = (max, min) => {    \r\n        const vl = Math.floor(Math.random() * (max - min) + min)\r\n    \r\n        return(\r\n            vl\r\n        )\r\n    }\r\n   \r\n    const botao = () => {\r\n        setDados(\r\n            {              \r\n                labels: [\"Verm.\", \"Azul\", \"Amar.\", \"Verde\", \"Roxo\", \"Laran.\",\"Cinza\"],\r\n                datasets: [\r\n                    {\r\n                        label: \"# of Votes\",\r\n                        data: [valores(20,1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1)],\r\n                        backgroundColor: [\r\n                            'rgba(0, 0, 0, 0)'\r\n                            \r\n                        ],\r\n                        borderColor: [\r\n                            'rgba(0,0,0,0.1)'\r\n                        ],\r\n                        borderWidth: 3,\r\n        \r\n                        pointBackgroundColor:[\r\n                            'rgba(255, 99, 132)',\r\n                            'rgba(54, 162, 235)',\r\n                            'rgba(255, 206, 86)',\r\n                            'rgba(75, 192, 192)',\r\n                            'rgba(153, 102, 255)',\r\n                            'rgba(255, 159, 64)'\r\n                        ],\r\n\r\n                        pointRadius: 5\r\n                        }\r\n                ]\r\n            }\r\n        )\r\n    }\r\n    \r\n    \r\n    useEffect(() => {        \r\n\r\n        const line = document.getElementById(\"Line\")\r\n\r\n        new Chart(line, {\r\n            type: \"line\",\r\n            data: dados,\r\n            options: {\r\n\r\n                events: ['click'],\r\n\r\n                legend: {\r\n                    display: props.legenda\r\n                },\r\n\r\n                title: {\r\n                    display: true,\r\n                    text: props.titulo\r\n                }\r\n            }\r\n        })\r\n\r\n    })\r\n\r\n    const [dados, setDados] = useState(\r\n        {              \r\n            labels: [\"Verm.\", \"Azul\", \"Amar.\", \"Verde\", \"Roxo\", \"Laran.\",\"Cinza\"],\r\n            datasets: [\r\n                {\r\n                    label: \"# of Votes\",\r\n                    data: [valores(20,1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1)],\r\n                    backgroundColor: [\r\n                        'rgba(0, 0, 0, 0)'\r\n                        \r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(0,0,0,0.1)'\r\n                    ],\r\n                    borderWidth: 3,\r\n\r\n                    pointBackgroundColor:[\r\n                        'rgba(255, 99, 132)',\r\n                        'rgba(54, 162, 235)',\r\n                        'rgba(255, 206, 86)',\r\n                        'rgba(75, 192, 192)',\r\n                        'rgba(153, 102, 255)',\r\n                        'rgba(255, 159, 64)'\r\n                    ],\r\n\r\n                    pointRadius: 5\r\n                }\r\n            ]\r\n        }\r\n    );\r\n\r\n    return(\r\n        <div className=\"col-12 col-sm-6 col-md-4\">    \r\n            <Card className=\"p-2 mt-3\">               \r\n                <canvas id=\"Line\" width=\"400\" height=\"400\"></canvas>    \r\n                <Button color=\"primary mt-3\" onClick={()=>{botao()}}>Randomizar Dados</Button>\r\n            </Card>            \r\n        </div>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Card, Button } from 'reactstrap'\r\nimport Chart from 'chart.js'\r\n\r\nexport default (props) => {\r\n\r\n    const valores = (max, min) => {    \r\n        const vl = Math.floor(Math.random() * (max - min) + min)\r\n    \r\n        return(\r\n            vl\r\n        )\r\n    }\r\n   \r\n    const botao = () => {\r\n        setDados(\r\n            {              \r\n                labels: [\"Verm.\", \"Azul\", \"Amar.\", \"Verde\", \"Roxo\", \"Laran.\",\"Cinza\"],\r\n                datasets: [\r\n                    {\r\n                    label: \"# of Votes\",\r\n                    data: [valores(20,1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1)],\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.8)',\r\n                        'rgba(54, 162, 235, 0.8)',\r\n                        'rgba(255, 206, 86, 0.8)',\r\n                        'rgba(75, 192, 192, 0.8)',\r\n                        'rgba(153, 102, 255, 0.8)',\r\n                        'rgba(255, 159, 64, 0.8)'\r\n                        \r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132)',\r\n                        'rgba(54, 162, 235)',\r\n                        'rgba(255, 206, 86)',\r\n                        'rgba(75, 192, 192)',\r\n                        'rgba(153, 102, 255)',\r\n                        'rgba(255, 159, 64)'\r\n                    ],\r\n                    borderWidth: 1\r\n                    }\r\n                ]\r\n            }\r\n        )\r\n    }\r\n    \r\n    \r\n    useEffect(() => {        \r\n\r\n        const bar = document.getElementById(\"Bar\")\r\n\r\n        new Chart(bar, {\r\n            type: \"bar\",\r\n            data: dados,\r\n            options: {\r\n\r\n                events: ['click'],\r\n\r\n                legend: {\r\n                    display: props.legenda\r\n                },\r\n\r\n                title: {\r\n                    display: true,\r\n                    text: props.titulo\r\n                }\r\n            }\r\n        })\r\n\r\n    })\r\n\r\n    const [dados, setDados] = useState(\r\n        {              \r\n            labels: [\"Verm.\", \"Azul\", \"Amar.\", \"Verde\", \"Roxo\", \"Laran.\",\"Cinza\"],\r\n            datasets: [\r\n                {\r\n                label: \"# of Votes\",\r\n                data: [valores(20,1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1)],\r\n                backgroundColor: [\r\n                    'rgba(255, 99, 132, 0.8)',\r\n                    'rgba(54, 162, 235, 0.8)',\r\n                    'rgba(255, 206, 86, 0.8)',\r\n                    'rgba(75, 192, 192, 0.8)',\r\n                    'rgba(153, 102, 255, 0.8)',\r\n                    'rgba(255, 159, 64, 0.8)'\r\n                    \r\n                ],\r\n                borderColor: [\r\n                    'rgba(255, 99, 132)',\r\n                    'rgba(54, 162, 235)',\r\n                    'rgba(255, 206, 86)',\r\n                    'rgba(75, 192, 192)',\r\n                    'rgba(153, 102, 255)',\r\n                    'rgba(255, 159, 64)'\r\n                ],\r\n                borderWidth: 1\r\n                }\r\n            ]\r\n        }\r\n    );\r\n\r\n    return(\r\n        <div className=\"col-12 col-sm-6 col-md-4\">    \r\n            <Card className=\"p-2 mt-3\">               \r\n                <canvas id=\"Bar\" width=\"400\" height=\"400\"></canvas>    \r\n                <Button color=\"primary mt-3\" onClick={()=>{botao()}}>Randomizar Dados</Button>\r\n            </Card>            \r\n        </div>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Card, Button } from 'reactstrap'\r\nimport Chart from 'chart.js'\r\n\r\nexport default (props) => {\r\n\r\n    const valores = (max, min) => {    \r\n        const vl = Math.floor(Math.random() * (max - min) + min)\r\n    \r\n        return(\r\n            vl\r\n        )\r\n    }\r\n   \r\n    const botao = () => {\r\n        setDados(\r\n            {              \r\n                labels: [\"Verm.\", \"Azul\", \"Amar.\", \"Verde\", \"Roxo\", \"Laran.\",\"Cinza\"],\r\n                datasets: [\r\n                    {\r\n                    label: \"# of Votes\",\r\n                    data: [\r\n                        {x: valores(20, 1), y: valores(20, 1), r: valores(20, 10)},\r\n                        {x: valores(20, 1), y: valores(20, 1), r: valores(20, 10)},\r\n                        {x: valores(20, 1), y: valores(20, 1), r: valores(20, 10)},\r\n                        {x: valores(20, 1), y: valores(20, 1), r: valores(20, 10)},\r\n                        {x: valores(20, 1), y: valores(20, 1), r: valores(20, 10)},\r\n                        {x: valores(20, 1), y: valores(20, 1), r: valores(20, 10)},\r\n                        {x: valores(20, 1), y: valores(20, 1), r: valores(20, 10)},\r\n                    ],\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.8)',\r\n                        'rgba(54, 162, 235, 0.8)',\r\n                        'rgba(255, 206, 86, 0.8)',\r\n                        'rgba(75, 192, 192, 0.8)',\r\n                        'rgba(153, 102, 255, 0.8)',\r\n                        'rgba(255, 159, 64, 0.8)'\r\n                        \r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132)',\r\n                        'rgba(54, 162, 235)',\r\n                        'rgba(255, 206, 86)',\r\n                        'rgba(75, 192, 192)',\r\n                        'rgba(153, 102, 255)',\r\n                        'rgba(255, 159, 64)'\r\n                    ],\r\n                    borderWidth: 1\r\n                    }\r\n                ]\r\n            }\r\n        )\r\n    }\r\n    \r\n    \r\n    useEffect(() => {        \r\n\r\n        const bubble = document.getElementById(\"Bubble\")\r\n\r\n        new Chart(bubble, {\r\n            type: \"bubble\",\r\n            data: dados,\r\n            options: {\r\n\r\n                events: ['click'],\r\n\r\n                legend: {\r\n                    display: props.legenda\r\n                },\r\n\r\n                title: {\r\n                    display: true,\r\n                    text: props.titulo\r\n                }\r\n            }\r\n        })\r\n\r\n    })\r\n\r\n    const [dados, setDados] = useState(\r\n        {              \r\n            labels: [\"Verm.\", \"Azul\", \"Amar.\", \"Verde\", \"Roxo\", \"Laran.\",\"Cinza\"],\r\n            datasets: [\r\n                {\r\n                label: \"# of Votes\",\r\n                data: [\r\n                    {x: 5, y:5, r:10},\r\n                    {x: 10, y:10, r:20},\r\n                    {x: 20, y:20, r:14},\r\n                    {x: 7, y:16, r:20},\r\n                    {x: 18, y:8, r:10},\r\n                    {x: 8, y:12, r:16},\r\n                    {x: 14, y:14, r:18},\r\n                ],\r\n                backgroundColor: [\r\n                    'rgba(255, 99, 132, 0.8)',\r\n                    'rgba(54, 162, 235, 0.8)',\r\n                    'rgba(255, 206, 86, 0.8)',\r\n                    'rgba(75, 192, 192, 0.8)',\r\n                    'rgba(153, 102, 255, 0.8)',\r\n                    'rgba(255, 159, 64, 0.8)'\r\n                    \r\n                ],\r\n                borderColor: [\r\n                    'rgba(255, 99, 132)',\r\n                    'rgba(54, 162, 235)',\r\n                    'rgba(255, 206, 86)',\r\n                    'rgba(75, 192, 192)',\r\n                    'rgba(153, 102, 255)',\r\n                    'rgba(255, 159, 64)'\r\n                ],\r\n                borderWidth: 1\r\n                }\r\n            ]\r\n        }\r\n    );\r\n\r\n    return(\r\n        <div className=\"col-12 col-sm-6 col-md-4\">    \r\n            <Card className=\"p-2 mt-3\">               \r\n                <canvas id=\"Bubble\" width=\"400\" height=\"400\"></canvas>    \r\n                <Button color=\"primary mt-3\" onClick={()=>{botao()}}>Randomizar Dados</Button>\r\n            </Card>            \r\n        </div>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Card, Button } from 'reactstrap'\r\nimport Chart from 'chart.js'\r\n\r\nexport default (props) => {\r\n\r\n    const valores = (max, min) => {    \r\n        const vl = Math.floor(Math.random() * (max - min) + min)\r\n    \r\n        return(\r\n            vl\r\n        )\r\n    }\r\n   \r\n    const botao = () => {\r\n        setDados(\r\n            {              \r\n                labels: [\"Verm.\", \"Azul\", \"Amar.\", \"Verde\", \"Roxo\", \"Laran.\",\"Cinza\"],\r\n                datasets: [\r\n                    {\r\n                    label: \"# of Votes\",\r\n                    data: [valores(20,1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1)],\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.8)',\r\n                        'rgba(54, 162, 235, 0.8)',\r\n                        'rgba(255, 206, 86, 0.8)',\r\n                        'rgba(75, 192, 192, 0.8)',\r\n                        'rgba(153, 102, 255, 0.8)',\r\n                        'rgba(255, 159, 64, 0.8)'\r\n                        \r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132)',\r\n                        'rgba(54, 162, 235)',\r\n                        'rgba(255, 206, 86)',\r\n                        'rgba(75, 192, 192)',\r\n                        'rgba(153, 102, 255)',\r\n                        'rgba(255, 159, 64)'\r\n                    ],\r\n                    borderWidth: 1\r\n                    }\r\n                ]\r\n            }\r\n        )\r\n    }\r\n    \r\n    \r\n    useEffect(() => {        \r\n\r\n        const doughnut = document.getElementById(\"Doughnut\")\r\n\r\n        new Chart(doughnut, {\r\n            type: \"doughnut\",\r\n            data: dados,\r\n            options: {\r\n\r\n                events: ['click'],\r\n\r\n                legend: {\r\n                    display: props.legenda\r\n                },\r\n\r\n                title: {\r\n                    display: true,\r\n                    text: props.titulo\r\n                }\r\n            }\r\n        })\r\n\r\n    })\r\n\r\n    const [dados, setDados] = useState(\r\n        {              \r\n            labels: [\"Verm.\", \"Azul\", \"Amar.\", \"Verde\", \"Roxo\", \"Laran.\",\"Cinza\"],\r\n            datasets: [\r\n                {\r\n                label: \"# of Votes\",\r\n                data: [valores(20,1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1)],\r\n                backgroundColor: [\r\n                    'rgba(255, 99, 132, 0.8)',\r\n                    'rgba(54, 162, 235, 0.8)',\r\n                    'rgba(255, 206, 86, 0.8)',\r\n                    'rgba(75, 192, 192, 0.8)',\r\n                    'rgba(153, 102, 255, 0.8)',\r\n                    'rgba(255, 159, 64, 0.8)'\r\n                    \r\n                ],\r\n                borderColor: [\r\n                    'rgba(255, 99, 132)',\r\n                    'rgba(54, 162, 235)',\r\n                    'rgba(255, 206, 86)',\r\n                    'rgba(75, 192, 192)',\r\n                    'rgba(153, 102, 255)',\r\n                    'rgba(255, 159, 64)'\r\n                ],\r\n                borderWidth: 1\r\n                }\r\n            ]\r\n        }\r\n    );\r\n\r\n    return(\r\n        <div className=\"col-12 col-sm-6 col-md-4\">    \r\n            <Card className=\"p-2 mt-3\">               \r\n                <canvas id=\"Doughnut\" width=\"400\" height=\"400\"></canvas>    \r\n                <Button color=\"primary mt-3\" onClick={()=>{botao()}}>Randomizar Dados</Button>\r\n            </Card>            \r\n        </div>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Card, Button } from 'reactstrap'\r\nimport Chart from 'chart.js'\r\n\r\nexport default (props) => {\r\n\r\n    const valores = (max, min) => {    \r\n        const vl = Math.floor(Math.random() * (max - min) + min)\r\n    \r\n        return(\r\n            vl\r\n        )\r\n    }\r\n   \r\n    const botao = () => {\r\n        setDados(\r\n            {              \r\n                labels: [\"Verm.\", \"Azul\", \"Amar.\", \"Verde\", \"Roxo\", \"Laran.\",\"Cinza\"],\r\n                datasets: [\r\n                    {\r\n                    label: \"# of Votes\",\r\n                    data: [valores(20,1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1)],\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.8)',\r\n                        'rgba(54, 162, 235, 0.8)',\r\n                        'rgba(255, 206, 86, 0.8)',\r\n                        'rgba(75, 192, 192, 0.8)',\r\n                        'rgba(153, 102, 255, 0.8)',\r\n                        'rgba(255, 159, 64, 0.8)'\r\n                        \r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132)',\r\n                        'rgba(54, 162, 235)',\r\n                        'rgba(255, 206, 86)',\r\n                        'rgba(75, 192, 192)',\r\n                        'rgba(153, 102, 255)',\r\n                        'rgba(255, 159, 64)'\r\n                    ],\r\n                    borderWidth: 1\r\n                    }\r\n                ]\r\n            }\r\n        )\r\n    }\r\n    \r\n    \r\n    useEffect(() => {        \r\n\r\n        const hbar = document.getElementById(\"Hbar\")\r\n\r\n        new Chart(hbar, {\r\n            type: \"horizontalBar\",\r\n            data: dados,\r\n            options: {\r\n\r\n                events: ['click'],\r\n\r\n                legend: {\r\n                    display: props.legenda\r\n                },\r\n\r\n                title: {\r\n                    display: true,\r\n                    text: props.titulo\r\n                }\r\n            }\r\n        })\r\n\r\n    })\r\n\r\n    const [dados, setDados] = useState(\r\n        {              \r\n            labels: [\"Verm.\", \"Azul\", \"Amar.\", \"Verde\", \"Roxo\", \"Laran.\",\"Cinza\"],\r\n            datasets: [\r\n                {\r\n                label: \"# of Votes\",\r\n                data: [valores(20,1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1)],\r\n                backgroundColor: [\r\n                    'rgba(255, 99, 132, 0.8)',\r\n                    'rgba(54, 162, 235, 0.8)',\r\n                    'rgba(255, 206, 86, 0.8)',\r\n                    'rgba(75, 192, 192, 0.8)',\r\n                    'rgba(153, 102, 255, 0.8)',\r\n                    'rgba(255, 159, 64, 0.8)'\r\n                    \r\n                ],\r\n                borderColor: [\r\n                    'rgba(255, 99, 132)',\r\n                    'rgba(54, 162, 235)',\r\n                    'rgba(255, 206, 86)',\r\n                    'rgba(75, 192, 192)',\r\n                    'rgba(153, 102, 255)',\r\n                    'rgba(255, 159, 64)'\r\n                ],\r\n                borderWidth: 1\r\n                }\r\n            ]\r\n        }\r\n    );\r\n\r\n    return(\r\n        <div className=\"col-12 col-sm-6 col-md-4\">    \r\n            <Card className=\"p-2 mt-3\">               \r\n                <canvas id=\"Hbar\" width=\"400\" height=\"400\"></canvas>    \r\n                <Button color=\"primary mt-3\" onClick={()=>{botao()}}>Randomizar Dados</Button>\r\n            </Card>            \r\n        </div>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Card, Button } from 'reactstrap'\r\nimport Chart from 'chart.js'\r\n\r\nexport default (props) => {\r\n\r\n    const valores = (max, min) => {    \r\n        const vl = Math.floor(Math.random() * (max - min) + min)\r\n    \r\n        return(\r\n            vl\r\n        )\r\n    }\r\n   \r\n    const botao = () => {\r\n        setDados(\r\n            {              \r\n                labels: [\"Verm.\", \"Azul\", \"Amar.\", \"Verde\", \"Roxo\", \"Laran.\",\"Cinza\"],\r\n                datasets: [\r\n                    {\r\n                    label: \"# of Votes\",\r\n                    data: [valores(20,1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1)],\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.8)',\r\n                        'rgba(54, 162, 235, 0.8)',\r\n                        'rgba(255, 206, 86, 0.8)',\r\n                        'rgba(75, 192, 192, 0.8)',\r\n                        'rgba(153, 102, 255, 0.8)',\r\n                        'rgba(255, 159, 64, 0.8)'\r\n                        \r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132)',\r\n                        'rgba(54, 162, 235)',\r\n                        'rgba(255, 206, 86)',\r\n                        'rgba(75, 192, 192)',\r\n                        'rgba(153, 102, 255)',\r\n                        'rgba(255, 159, 64)'\r\n                    ],\r\n                    borderWidth: 1\r\n                    }\r\n                ]\r\n            }\r\n        )\r\n    }\r\n    \r\n    \r\n    useEffect(() => {        \r\n\r\n        const pie = document.getElementById(\"Pie\")\r\n\r\n        new Chart(pie, {\r\n            type: \"pie\",\r\n            data: dados,\r\n            options: {\r\n\r\n                events: ['click'],\r\n\r\n                legend: {\r\n                    display: props.legenda\r\n                },\r\n\r\n                title: {\r\n                    display: true,\r\n                    text: props.titulo\r\n                }\r\n            }\r\n        })\r\n\r\n    })\r\n\r\n    const [dados, setDados] = useState(\r\n        {              \r\n            labels: [\"Verm.\", \"Azul\", \"Amar.\", \"Verde\", \"Roxo\", \"Laran.\",\"Cinza\"],\r\n            datasets: [\r\n                {\r\n                label: \"# of Votes\",\r\n                data: [valores(20,1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1)],\r\n                backgroundColor: [\r\n                    'rgba(255, 99, 132, 0.8)',\r\n                    'rgba(54, 162, 235, 0.8)',\r\n                    'rgba(255, 206, 86, 0.8)',\r\n                    'rgba(75, 192, 192, 0.8)',\r\n                    'rgba(153, 102, 255, 0.8)',\r\n                    'rgba(255, 159, 64, 0.8)'\r\n                    \r\n                ],\r\n                borderColor: [\r\n                    'rgba(255, 99, 132)',\r\n                    'rgba(54, 162, 235)',\r\n                    'rgba(255, 206, 86)',\r\n                    'rgba(75, 192, 192)',\r\n                    'rgba(153, 102, 255)',\r\n                    'rgba(255, 159, 64)'\r\n                ],\r\n                borderWidth: 1\r\n                }\r\n            ]\r\n        }\r\n    );\r\n\r\n    return(\r\n        <div className=\"col-12 col-sm-6 col-md-4\">    \r\n            <Card className=\"p-2 mt-3\">               \r\n                <canvas id=\"Pie\" width=\"400\" height=\"400\"></canvas>    \r\n                <Button color=\"primary mt-3\" onClick={()=>{botao()}}>Randomizar Dados</Button>\r\n            </Card>            \r\n        </div>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Card, Button } from 'reactstrap'\r\nimport Chart from 'chart.js'\r\n\r\nexport default (props) => {\r\n\r\n    const valores = (max, min) => {    \r\n        const vl = Math.floor(Math.random() * (max - min) + min)\r\n    \r\n        return(\r\n            vl\r\n        )\r\n    }\r\n   \r\n    const botao = () => {\r\n        setDados(\r\n            {              \r\n                labels: [\"Verm.\", \"Azul\", \"Amar.\", \"Verde\", \"Roxo\", \"Laran.\",\"Cinza\"],\r\n                datasets: [\r\n                    {\r\n                    label: \"# of Votes\",\r\n                    data: [valores(20,1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1)],\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.5)',\r\n                        'rgba(54, 162, 235, 0.5)',\r\n                        'rgba(255, 206, 86, 0.5)',\r\n                        'rgba(75, 192, 192, 0.5)',\r\n                        'rgba(153, 102, 255, 0.5)',\r\n                        'rgba(255, 159, 64, 0.5)'\r\n                        \r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132)',\r\n                        'rgba(54, 162, 235)',\r\n                        'rgba(255, 206, 86)',\r\n                        'rgba(75, 192, 192)',\r\n                        'rgba(153, 102, 255)',\r\n                        'rgba(255, 159, 64)'\r\n                    ],\r\n                    borderWidth: 1\r\n                    }\r\n                ]\r\n            }\r\n        )\r\n    }\r\n    \r\n    \r\n    useEffect(() => {        \r\n\r\n        const polar = document.getElementById(\"Polar\")\r\n\r\n        new Chart(polar, {\r\n            type: \"polarArea\",\r\n            data: dados,\r\n            options: {\r\n\r\n                events: ['click'],\r\n\r\n                legend: {\r\n                    display: props.legenda\r\n                },\r\n\r\n                title: {\r\n                    display: true,\r\n                    text: props.titulo\r\n                }\r\n            }\r\n        })\r\n\r\n    })\r\n\r\n    const [dados, setDados] = useState(\r\n        {              \r\n            labels: [\"Verm.\", \"Azul\", \"Amar.\", \"Verde\", \"Roxo\", \"Laran.\",\"Cinza\"],\r\n            datasets: [\r\n                {\r\n                label: \"# of Votes\",\r\n                data: [valores(20,1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1)],\r\n                backgroundColor: [\r\n                    'rgba(255, 99, 132, 0.5)',\r\n                    'rgba(54, 162, 235, 0.5)',\r\n                    'rgba(255, 206, 86, 0.5)',\r\n                    'rgba(75, 192, 192, 0.5)',\r\n                    'rgba(153, 102, 255, 0.5)',\r\n                    'rgba(255, 159, 64, 0.5)'\r\n                    \r\n                ],\r\n                borderColor: [\r\n                    'rgba(255, 99, 132)',\r\n                    'rgba(54, 162, 235)',\r\n                    'rgba(255, 206, 86)',\r\n                    'rgba(75, 192, 192)',\r\n                    'rgba(153, 102, 255)',\r\n                    'rgba(255, 159, 64)'\r\n                ],\r\n                borderWidth: 1\r\n                }\r\n            ]\r\n        }\r\n    );\r\n\r\n    return(\r\n        <div className=\"col-12 col-sm-6 col-md-4\">    \r\n            <Card className=\"p-2 mt-3\">               \r\n                <canvas id=\"Polar\" width=\"400\" height=\"400\"></canvas>    \r\n                <Button color=\"primary mt-3\" onClick={()=>{botao()}}>Randomizar Dados</Button>\r\n            </Card>            \r\n        </div>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Card, Button } from 'reactstrap'\r\nimport Chart from 'chart.js'\r\n\r\nexport default (props) => {\r\n\r\n    const valores = (max, min) => {    \r\n        const vl = Math.floor(Math.random() * (max - min) + min)\r\n    \r\n        return(\r\n            vl\r\n        )\r\n    }\r\n   \r\n    const botao = () => {\r\n        setDados(\r\n            {              \r\n                labels: [\"Verm.\", \"Azul\", \"Amar.\", \"Verde\", \"Roxo\", \"Laran.\",\"Cinza\"],\r\n                datasets: [\r\n                    {\r\n                    label: \"# of Votes\",\r\n                    data: [valores(20,1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1)],\r\n                    backgroundColor: [\r\n                        'rgba(75, 192, 192, 0.5)'                        \r\n                        \r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132)',\r\n                        'rgba(54, 162, 235)',\r\n                        'rgba(255, 206, 86)',\r\n                        'rgba(75, 192, 192)',\r\n                        'rgba(153, 102, 255)',\r\n                        'rgba(255, 159, 64)'\r\n                    ],\r\n                    borderWidth: 1,\r\n                    \r\n                    pointBackgroundColor:[\r\n                        'rgba(255, 99, 132)',\r\n                        'rgba(54, 162, 235)',\r\n                        'rgba(255, 206, 86)',\r\n                        'rgba(75, 192, 192)',\r\n                        'rgba(153, 102, 255)',\r\n                        'rgba(255, 159, 64)'\r\n                        ]                \r\n                    }\r\n                ]\r\n            }\r\n        )\r\n    }\r\n    \r\n    \r\n    useEffect(() => {        \r\n\r\n        const radar = document.getElementById(\"Radar\")\r\n\r\n        new Chart(radar, {\r\n            type: \"radar\",\r\n            data: dados,\r\n            options: {\r\n\r\n                events: ['click'],\r\n\r\n                legend: {\r\n                    display: props.legenda\r\n                },\r\n\r\n                title: {\r\n                    display: true,\r\n                    text: props.titulo\r\n                }\r\n            }\r\n        })\r\n\r\n    })\r\n\r\n    const [dados, setDados] = useState(\r\n        {              \r\n            labels: [\"Verm.\", \"Azul\", \"Amar.\", \"Verde\", \"Roxo\", \"Laran.\",\"Cinza\"],\r\n            datasets: [\r\n                {\r\n                label: \"# of Votes\",\r\n                data: [valores(20,1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1),valores(20, 1)],\r\n                backgroundColor: [\r\n                    'rgba(75, 192, 192, 0.5)'                   \r\n                ],\r\n                borderColor: [\r\n                    'rgba(255, 99, 132)',\r\n                    'rgba(54, 162, 235)',\r\n                    'rgba(255, 206, 86)',\r\n                    'rgba(75, 192, 192)',\r\n                    'rgba(153, 102, 255)',\r\n                    'rgba(255, 159, 64)'\r\n                ],\r\n                borderWidth: 1,\r\n\r\n                pointBackgroundColor:[\r\n                    'rgba(255, 99, 132)',\r\n                    'rgba(54, 162, 235)',\r\n                    'rgba(255, 206, 86)',\r\n                    'rgba(75, 192, 192)',\r\n                    'rgba(153, 102, 255)',\r\n                    'rgba(255, 159, 64)'\r\n                    ]                \r\n                }\r\n            ]\r\n        }\r\n    );\r\n\r\n    return(\r\n        <div className=\"col-12 col-sm-6 col-md-4\">    \r\n            <Card className=\"p-2 mt-3\">               \r\n                <canvas id=\"Radar\" width=\"400\" height=\"400\"></canvas>    \r\n                <Button color=\"primary mt-3\" onClick={()=>{botao()}}>Randomizar Dados</Button>\r\n            </Card>            \r\n        </div>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Card, Button } from 'reactstrap'\r\nimport Chart from 'chart.js'\r\n\r\nexport default (props) => {\r\n\r\n    const valores = (max, min) => {    \r\n        const vl = Math.floor(Math.random() * (max - min) + min)\r\n    \r\n        return(\r\n            vl\r\n        )\r\n    }\r\n   \r\n    const botao = () => {\r\n        setDados(\r\n            {              \r\n                labels: [\"Verm.\", \"Azul\", \"Amar.\", \"Verde\", \"Roxo\", \"Laran.\",\"Cinza\"],\r\n                datasets: [\r\n                    {\r\n                    label: \"# of Votes\",\r\n                    data: [\r\n                        {x: valores(20, 1), y: valores(20, 1)},\r\n                        {x: valores(20, 1), y: valores(20, 1)},\r\n                        {x: valores(20, 1), y: valores(20, 1)},\r\n                        {x: valores(20, 1), y: valores(20, 1)},\r\n                        {x: valores(20, 1), y: valores(20, 1)},\r\n                        {x: valores(20, 1), y: valores(20, 1)},\r\n                        {x: valores(20, 1), y: valores(20, 1)},\r\n                    ],\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.8)',\r\n                        'rgba(54, 162, 235, 0.8)',\r\n                        'rgba(255, 206, 86, 0.8)',\r\n                        'rgba(75, 192, 192, 0.8)',\r\n                        'rgba(153, 102, 255, 0.8)',\r\n                        'rgba(255, 159, 64, 0.8)'\r\n                        \r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132)',\r\n                        'rgba(54, 162, 235)',\r\n                        'rgba(255, 206, 86)',\r\n                        'rgba(75, 192, 192)',\r\n                        'rgba(153, 102, 255)',\r\n                        'rgba(255, 159, 64)'\r\n                    ],\r\n                    borderWidth: 1,\r\n\r\n                    pointRadius: 10\r\n                    }\r\n                ]\r\n            }\r\n        )\r\n    }\r\n    \r\n    \r\n    useEffect(() => {        \r\n\r\n        const scatter = document.getElementById(\"Scatter\")\r\n\r\n        new Chart(scatter, {\r\n            type: \"scatter\",\r\n            data: dados,\r\n            options: {\r\n\r\n                events: ['click'],\r\n\r\n                legend: {\r\n                    display: props.legenda\r\n                },\r\n\r\n                title: {\r\n                    display: true,\r\n                    text: props.titulo\r\n                },\r\n                \r\n            }\r\n        })\r\n\r\n    })\r\n\r\n    const [dados, setDados] = useState(\r\n        {              \r\n            labels: [\"Verm.\", \"Azul\", \"Amar.\", \"Verde\", \"Roxo\", \"Laran.\",\"Cinza\"],\r\n            datasets: [\r\n                {\r\n                label: \"# of Votes\",\r\n                data: [\r\n                    {x: valores(20, 1), y: valores(20, 1)},\r\n                    {x: valores(20, 1), y: valores(20, 1)},\r\n                    {x: valores(20, 1), y: valores(20, 1)},\r\n                    {x: valores(20, 1), y: valores(20, 1)},\r\n                    {x: valores(20, 1), y: valores(20, 1)},\r\n                    {x: valores(20, 1), y: valores(20, 1)},\r\n                    {x: valores(20, 1), y: valores(20, 1)},\r\n                ],\r\n                backgroundColor: [\r\n                    'rgba(255, 99, 132, 0.8)',\r\n                    'rgba(54, 162, 235, 0.8)',\r\n                    'rgba(255, 206, 86, 0.8)',\r\n                    'rgba(75, 192, 192, 0.8)',\r\n                    'rgba(153, 102, 255, 0.8)',\r\n                    'rgba(255, 159, 64, 0.8)'\r\n                    \r\n                ],\r\n                borderColor: [\r\n                    'rgba(255, 99, 132)',\r\n                    'rgba(54, 162, 235)',\r\n                    'rgba(255, 206, 86)',\r\n                    'rgba(75, 192, 192)',\r\n                    'rgba(153, 102, 255)',\r\n                    'rgba(255, 159, 64)'\r\n                ],\r\n                borderWidth: 1,\r\n\r\n                pointRadius: 10\r\n                }\r\n            ]\r\n        }\r\n    );\r\n\r\n    return(\r\n        <div className=\"col-12 col-sm-6 col-md-4\">    \r\n            <Card className=\"p-2 mt-3\">               \r\n                <canvas id=\"Scatter\" width=\"400\" height=\"400\"></canvas>    \r\n                <Button color=\"primary mt-3\" onClick={()=>{botao()}}>Randomizar Dados</Button>\r\n            </Card>            \r\n        </div>\r\n    )\r\n\r\n}","import logo from './logo.svg';\nimport { Navbar, NavbarBrand } from 'reactstrap';\nimport './App.css';\n\nimport Line from './components/line'\nimport Bar from './components/bar'\nimport Bubble from './components/bubble'\nimport Doughnut from './components/doughnut'\nimport Hbar from './components/hbar'\nimport Pie from './components/pie'\nimport Polar from './components/polarArea'\nimport Radar from './components/radar'\nimport Scatter from './components/scatter'\n\nfunction App(props) {  \n\n  document.title = 'Graficos - Renan'\n\n  return (\n    <div>\n      <Navbar dark color=\"primary\">\n        <div className=\"container\">\n          <NavbarBrand href=\"/\">Exemplos de Graficos para Dashboards - Renan</NavbarBrand>\n        </div>\n      </Navbar>\n\n      <div className=\"row\">\n        <Line legenda={false} titulo=\"Grafico tipo Line\" />\n        <Bar legenda={false} titulo=\"Grafico tipo Bar\" />\n        <Bubble legenda={false} titulo=\"Grafico tipo Bubble\" />\n        <Doughnut legenda={true} titulo=\"Grafico tipo Dougnut\" />\n        <Hbar legenda={false} titulo=\"Grafico tipo Horizontal Bar\" />\n        <Pie legenda={true} titulo=\"Grafico tipo Pie\" />\n        <Polar legenda={true} titulo=\"Grafico tipo Polar Area\" />\n        <Radar legenda={false} titulo=\"Grafico tipo Radar\" />\n        <Scatter legenda={false} titulo=\"Grafico tipo Scatter\" />\n        \n      </div>\n      \n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}